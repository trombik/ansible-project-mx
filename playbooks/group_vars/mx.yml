---
project_vmail_user: vmail
project_vmail_group: vmail
project_vmail_root_dir: /var/vmail
project_vmail_auth_group: vmailauth
# ____________________________________________________nsd
nsd_flags: ""
nsd_zones: "{{ project_nsd_zones }}"
os_nsd_extra_packages:
  FreeBSD: []
  Debian: ["dnsutils"]
  OpenBSD: []
  RedHat: ["bind-utils"]
nsd_extra_packages: "{{ os_nsd_extra_packages[ansible_os_family] }}"
nsd_extra_groups: []
nsd_config: |
  server:
    server-count: 2
    do-ip4: yes
    do-ip6: no
    verbosity: 1
    username: "{{ nsd_user }}"
    zonesdir: "{{ nsd_zonesdir }}"
    database: ""
    hide-version: yes
    pidfile: "{{ nsd_pid_file }}"
  remote-control:
    {% if ansible_os_family == 'OpenBSD' %}
    control-enable: yes
    {% else %}
    control-enable: no
    {% endif %}
    control-interface: 127.0.0.1
    control-port: 8952
  {% for zone in nsd_zones %}
  zone:
    name: "{{ zone.name }}"
    zonefile: "{{ nsd_config_dir }}/{{ zone.name }}"
    {{ zone.zone_config }}
  {% endfor %}

# ____________________________________________________x509_certificate
nsd_include_x509_certificate: yes
x509_certificate_debug_log: "{{ project_x509_certificate_debug_log }}"
x509_certificate:
  - name: nsd_server
    state: present
    secret:
      path: "{{ nsd_config_dir }}/nsd_server.key"
      owner: "{{ nsd_user }}"
      group: "{{ nsd_group }}"
      mode: "0640"
      key: "{{ project_nsd_server_key }}"
    public:
      path: "{{ nsd_config_dir }}/nsd_server.pem"
      key: "{{ project_nsd_server_pem }}"
  - name: nsd_control
    state: present
    secret:
      path: "{{ nsd_config_dir }}/nsd_control.key"
      owner: "{{ nsd_user }}"
      group: "{{ nsd_group }}"
      mode: "0640"
      key: "{{ project_nsd_control_key }}"
    public:
      path: "{{ nsd_config_dir }}/nsd_control.pem"
      key: "{{ project_nsd_control_pem }}"
  - name: "{{ ansible_fqdn }}"
    state: present
    secret:
      path: "{{ project_mail_key_path }}"
      key: "{{ project_mail_key }}"
    public:
      path: "{{ project_mail_pem_path }}"
      key: "{{ project_mail_pem }}"

# XXX these should be replaced with values with x509_certificate_dir
project_mail_key_path: "/etc/ssl/{{ ansible_fqdn }}.key"
project_mail_pem_path: "/etc/ssl/{{ ansible_fqdn }}.crt"

# ______________________________________________________smtpd
opensmtpd_extra_packages:
  - opensmtpd-extras
opensmtpd_tables:
  - name: passwd
    path: "{{ opensmtpd_conf_dir }}/passwd"
    type: passwd
    owner: root
    group: "{{ project_vmail_auth_group }}"
    mode: "0640"
    no_log: yes
    values: "{{ project_virtual_user_credentials }}"
  - name: domains
    path: "{{ opensmtpd_conf_dir }}/domains"
    type: file
    mode: "0644"
    no_log: no
    values:
      - trombik.org
      - one.trombik.org
  - name: virtuals
    path: "{{ opensmtpd_conf_dir }}/virtuals"
    type: db
    dbtype: hash
    format: aliases
    owner: root
    group: "{{ opensmtpd_user }}"
    mode: "0640"
    values: "{{ project_virtuals }}"

opensmtpd_flags: -v
opensmtpd_config: |
  pki {{ ansible_fqdn }} cert "{{ project_mail_pem_path }}"
  pki {{ ansible_fqdn }} key "{{ project_mail_key_path }}"

  {% for table in opensmtpd_tables %}
  table {{ table.name }} {{ table.type }}:{{ table.path }}{% if table['type'] == 'db' %}.db{% endif %}

  {% endfor %}
  {% for address in ansible_all_ipv4_addresses %}
  listen on {{ address }} port 25
  listen on {{ address }} port 587 smtps pki {{ ansible_fqdn }} auth <passwd> hostname {{ ansible_fqdn }} received-auth
  {% endfor %}
  action "inbound" lmtp "{{ project_dovecot_unix_socket }}" rcpt-to virtual <virtuals>
  action "outbound" relay
  match from any for domain <domains> action "inbound"
  match auth from any for any action "outbound"

opensmtpd_extra_groups:
  - "{{ project_vmail_auth_group }}"
opensmtpd_virtual_user:
  name: "{{ project_vmail_user }}"
  group: "{{ project_vmail_group }}"
  home: "{{ project_vmail_root_dir }}"
  comment: Virtual Mail User

opensmtpd_include_x509_certificate: yes

# ______________________________________________________dovecot
project_dovecot_unix_socket: /var/dovecot/lmtp
dovecot_extra_groups:
  - vmailauth
dovecot_flags: ""
dovecot_config: |
  protocols = imap lmtp
  listen = *
  base_dir = "{{ dovecot_base_dir }}"
  {% for i in dovecot_config_fragments %}
  {% if i.state == 'present' %}
  !include {{ dovecot_confd_dir }}/{{ i.name }}
  {% endif %}
  {% endfor %}
dovecot_config_fragments:
  - name: logging.conf
    state: present
    content: |
      auth_verbose = yes
      auth_verbose_passwords = no
      auth_debug = no
      auth_debug_passwords = no
  - name: main.conf
    state: present
    content: |
      service imap-login {
        inet_listener imap {
          # disable plain-text IMAP completely
          port = 0
        }
        inet_listener imaps {
          port = 993
        }
      }
      service auth {
        user = {{ dovecot_user }}
        group = {{ project_vmail_auth_group }}
      }
      service auth-worker {
        user = {{ dovecot_user }}
        group = {{ project_vmail_auth_group }}
      }
      service lmtp {
        unix_listener {{ project_dovecot_unix_socket }} {
          user = {{ opensmtpd_virtual_user.name }}
          group = {{ opensmtpd_virtual_user.group }}
          mode = 0600
        }
      }

      mail_location = maildir:{{ opensmtpd_virtual_user.home }}/%d/%n
      mail_privileged_group = {{ project_vmail_auth_group }}
      mmap_disable = yes
      first_valid_uid = 1000
      mail_plugin_dir = /usr/local/lib/dovecot
      mbox_write_locks = fcntl

      namespace inbox {
        inbox = yes
        mailbox Drafts {
          special_use = \Drafts
        }
        mailbox Drafts {
          special_use = \Drafts
        }
        mailbox Junk {
          special_use = \Junk
        }
        mailbox Trash {
          special_use = \Trash
        }
        mailbox Sent {
          special_use = \Sent
        }
        mailbox "Sent Messages" {
          special_use = \Sent
        }
      }
  - name: ssl.conf
    state: present
    content: |
      ssl = required
      ssl_cert = <{{ project_mail_pem_path }}
      ssl_key = <{{ project_mail_key_path }}
      ssl_cipher_list = ALL:!LOW:!SSLv2:!EXP:!aNULL
      verbose_ssl = yes
  - name: auth.conf
    state: present
    content: |
      auth_mechanisms = plain
      disable_plaintext_auth = yes
      passdb {
        args = scheme=blf-crypt {{ opensmtpd_conf_dir }}/passwd
        driver = passwd-file
      }
      userdb {
        args = uid={{ opensmtpd_virtual_user.name }} gid={{ opensmtpd_virtual_user.group }} home={{ project_vmail_root_dir}}/%d/%n
        driver = static
      }
# ______________________________________________________pf

pf_rule: |
  set skip on lo
  set block-policy drop

  table <rfc1918> const { \
    10/8, \
    172.16/12, \
    192.168/16 \
  }

  table <ssh_from> const { \
  {% for from in project_pf_ssh_from %}
    {{ from }}, \
  {% endfor %}
    127.0.0.1
  }

  block log all

  pass inet  proto icmp  all icmp-type echoreq
  pass inet6 proto icmp6 all icmp6-type echoreq
  pass inet  proto udp   from any to any port { bootps, bootpc }

  # ingress
  pass in  proto tcp from { <ssh_from>, <rfc1918> } to self port { ssh }
  pass in  proto tcp from any to self port { smtp, submission, imaps }
  pass in  proto tcp from any to self port { http, https }

  # egress
  pass out inet  proto icmp  from self to any
  pass out inet6 proto icmp6 from self to any
  pass out       proto tcp   from self to any
  pass out       proto udp   from self to any
